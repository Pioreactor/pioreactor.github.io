{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","App","locations","React","useState","ID","setID","useEffect","interval","setInterval","id","length","clearInterval","Grid","container","spacing","item","xs","md","style","padding","marginTop","action","method","name","target","noValidate","type","placeholder","required","position","left","aria-hidden","tabIndex","backgroundColor","value","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAKMA,EACJ,qBAAKC,UAAU,OAAOC,IAAI,aAmDbC,MA/Cf,WACE,IAAMC,EAAY,CAAC,UAAW,iBAAkB,cAAe,cAAe,WAAY,kBAAmB,eAAgB,oBAAqB,mBADrI,EAEOC,IAAMC,SAAS,GAFtB,mBAENC,EAFM,KAEFC,EAFE,KAWb,OAPAH,IAAMI,WAAU,WACd,IAAMC,EAAWC,aAAY,WAC3BH,GAAM,SAAAI,GAAE,OAAKA,EAAK,GAAKR,EAAUS,YAChC,MACH,OAAO,kBAAMC,cAAcJ,MAC1B,IAGD,eAACK,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAI,EAAOC,GAAI,IAC1B,cAACL,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACGpB,IAEH,cAACe,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAI,EAAOC,GAAI,IAE1B,cAACL,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAI,EAAOC,GAAI,IAC1B,cAACL,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,sBAAKR,GAAG,UAAUS,MAAO,CAAC,UAAa,SAAvC,UACE,qBAAIpB,UAAU,QAAd,4BAAsCG,EAAUG,GAAhD,OACA,oBAAIN,UAAU,QAAd,qCACA,qBAAKW,GAAG,kBAAR,SACA,sBAAMS,MAAO,CAACC,QAAS,OAAQC,UAAW,QAASC,OAAO,+FAAmGC,OAAO,OAAOb,GAAG,6BAA6Bc,KAAK,6BAA6BzB,UAAU,WAAW0B,OAAO,SAASC,YAAU,EAA5R,SACI,sBAAKhB,GAAG,yBAAR,UAEA,uBAAOiB,KAAK,QAAQH,KAAK,QAAQzB,UAAU,QAAQW,GAAG,YAAYkB,YAAY,gBAAgBC,UAAQ,IACtG,qBAAKV,MAAO,CAACW,SAAU,WAAYC,KAAM,WAAYC,cAAY,OAAjE,SAAwE,uBAAOL,KAAK,OAAOH,KAAK,yCAAyCS,SAAS,SAClJ,qBAAKlC,UAAU,QAAf,SAAuB,uBAAOoB,MAAO,CAACe,gBAAiB,WAAYP,KAAK,SAASQ,MAAM,eAAeX,KAAK,YAAYd,GAAG,wBAAwBX,UAAU,yBAQpK,cAACc,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,qBAAKlB,IAAI,WAAWoC,MAAM,YAE5B,cAACvB,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAI,EAAOC,GAAI,QCvCjBmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.db12a060.chunk.js","sourcesContent":["\nimport React from 'react'\nimport './App.css';\nimport Grid from \"@material-ui/core/Grid\";\n\nconst Header = (\n  <img className=\"logo\" src=\"logo.png\" />\n);\n\n\nfunction App() {\n  const locations = [\"at home\", \"in a classroom\", \"in a garage\", \"at your lab\", \"in space\", \"in your luggage\", \"at your desk\", \"with your friends\", \"at your friends\"]\n  const [ID, setID] = React.useState(1)\n\n  React.useEffect(() => {\n    const interval = setInterval(() => {\n      setID(id => (id + 1) % locations.length)\n    }, 1200);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={false} md={2}/>\n      <Grid item xs={12} md={8}>\n        {Header}\n      </Grid>\n      <Grid item xs={false} md={2}/>\n\n      <Grid item xs={false} md={2}/>\n      <Grid item xs={12} md={4}>\n        <div id=\"content\" style={{\"marginTop\": \"100px\"}}>\n          <h1 className=\"title\"> Build biology {locations[ID]},</h1>\n          <h1 className=\"title\"> without the price tag.</h1>\n          <div id=\"mc_embed_signup\">\n          <form style={{padding: \"15px\", marginTop: \"20px\"}} action=\"https://github.us18.list-manage.com/subscribe/post?u=2314215b756d01a83ce867c28&amp;id=f126210965\" method=\"post\" id=\"mc-embedded-subscribe-form\" name=\"mc-embedded-subscribe-form\" className=\"validate\" target=\"_blank\" noValidate>\n              <div id=\"mc_embed_signup_scroll\">\n\n              <input type=\"email\" name=\"EMAIL\" className=\"email\" id=\"mce-EMAIL\" placeholder=\"email address\" required/>\n              <div style={{position: \"absolute\", left: \"-5000px\"}} aria-hidden=\"true\"><input type=\"text\" name=\"b_2314215b756d01a83ce867c28_f126210965\" tabIndex=\"-1\"/></div>\n              <div className=\"clear\"><input style={{backgroundColor: \"#ff6684\"}} type=\"submit\" value=\"Get notified\" name=\"subscribe\" id=\"mc-embedded-subscribe\" className=\"button\"/></div>\n              </div>\n          </form>\n          </div>\n        </div>\n\n      </Grid>\n\n      <Grid item xs={12} md={4}>\n        <img src=\"hero.png\" width=\"500px\"/>\n      </Grid>\n      <Grid item xs={false} md={2}/>\n\n    </Grid>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}